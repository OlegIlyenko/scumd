table.passwordHashAlgorithms.create=create table if not exists password_hash_algorithms (\
  algorithm_name varchar(4) not null primary key\
  )

table.passwordHashAlgorithms.init=insert into password_hash_algorithms(algorithm_name) values ('none'), ('md5'), ('sha1')

table.passwordHashAlgorithms.check=select count(*) from password_hash_algorithms

table.users.create=create table if not exists users (\
  name varchar(100) not null primary key,\
  active varchar(5) not null default "true",\
  expire date null,\
  password varchar(100) null,\
  password_hash_alg varchar(4) null,\
  public_key varchar(10000) null,\
  foreign key (password_hash_alg) references password_hash_algorithms(algorithm_name) on update cascade\
  )

table.users.list=select u.*, ug.group_name as groupName \
  from users u left outer join user_groups ug on u.name = ug.user_name\

table.users.byName=select u.*, ug.group_name as groupName \
  from users u left outer join user_groups ug on u.name = ug.user_name \
  where u.name = :userName

table.groups.create=create table if not exists groups (\
  name varchar(100) not null primary key\
  )

table.groups.list=select * from groups

table.groups.byName=select * from groups where name = :groupName

table.userGroups.create=create table if not exists user_groups (\
  user_name varchar(100) not null,\
  group_name varchar(100) not null,\
  primary key (user_name, group_name),\
  foreign key (user_name) references users(name) on update cascade,\
  foreign key (group_name) references groups(name) on update cascade\
  )

table.privileges.create=create table if not exists privileges (\
  name varchar(10) not null primary key\
  )

table.privileges.init=insert into privileges(name) values ('ReadOnly'), ('ReadWrite'), ('Create')

table.privileges.check=select count(*) from privileges

table.repository.create=create table if not exists repositories (\
  name varchar(100) not null primary key,\
  path varchar(500) not null\
  )

table.userAcl.create=create table if not exists user_acl (\
  repository_name varchar(100) not null,\
  privilege varchar(10) not null default "ReadOnly",\
  user_name varchar(100) not null,\
  primary key (repository_name, privilege, user_name),\
  foreign key (repository_name) references repositories(name) on update cascade,\
  foreign key (privilege) references privileges(name) on update cascade,\
  foreign key (user_name) references users(name) on update cascade\
  )

table.groupAcl.create=create table if not exists group_acl (\
  repository_name varchar(100) not null,\
  privilege varchar(10) not null default "ReadOnly",\
  group_name varchar(100) not null,\
  primary key (repository_name, privilege, group_name),\
  foreign key (repository_name) references repositories(name) on update cascade,\
  foreign key (privilege) references privileges(name) on update cascade,\
  foreign key (group_name) references groups(name) on update cascade\
  )

table.repository.list=select r.name as repoName, r.path as repoPath, privilege, u.user_name as name, 'user' as type \
  from repositories r inner join user_acl u on r.name = u.repository_name \
  union \
  select r.name as repoName, r.path as repoPath, privilege, g.group_name as name, 'group' as type \
  from repositories r inner join group_acl g on r.name = g.repository_name    